
var _enchantments = [

{
	name: "fortune",
	weight: 2,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function( i ){  return 20+(i-1)*12;},
	canEnchant: function(mId,iId) { return iId === 0 || iId === 2 || iId === 3; },
	applies: function( other ) { return !( other === "fortune" || other === "silktouch" ) },
	id: 0,
	color: "white" },
{
	name: "protection",
	weight: 10,
	minlevel: 1,
	maxlevel: 4,
	maxEnchant: function( i ){ return this.minEnchant(i) + 20;},
	minEnchant: function( i ){  return 1+(i-1)*16; },
	canEnchant: function(mId,iId) { return iId >= 4; },
	applies: function( other ) { return !( other === "protection" || other === "fireproctection" || other === "blastproctection" ||other === "projectileproctection" ) },
	id: 1,
	color: "blue" },
{
	name: "fireprotection",
	weight: 5,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 12;},
	minEnchant: function( i ){  return 10+(i-1)*8;},
	canEnchant: function(mId,iId) { return iId >= 4; },
	applies: function( other ) { return !( other === "protection" || other === "fireproctection" || other === "blastproctection" ||other === "projectileproctection" ) },
	id: 2,
	color: "red" },
{
	name: "featherfall",
	weight: 5,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 10;},
	minEnchant: function( i ){  return 5+(i-1)*6;},
	canEnchant: function(mId,iId) { return iId === 7 },
	applies: function( other ) { return other !== "featherfall" },
	id: 3,
	color: "grey" },
{
	name: "blastprotection",
	weight: 2,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 12;},
	minEnchant: function( i ){  return 5+(i-1)*8;},
	canEnchant: function(mId,iId) { return iId >= 4; },
	applies: function( other ) { return !( other === "protection" || other === "fireproctection" || other === "blastproctection" ||other === "projectileproctection" ) },
	id: 4,
	color: "black" },
{
	name: "projectileprotection",
	weight: 2,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 15;},
	minEnchant: function( i ){  return 3+(i-1)*6;},
	canEnchant: function(mId,iId) { return iId >= 4; },
	applies: function( other ) { return !( other === "protection" || other === "fireproctection" || other === "blastproctection" ||other === "projectileproctection" ) },
	id: 5,
	color: "green" },
{
	name: "respiration",
	weight: 2,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 30;},
	minEnchant: function( i ){  return i*10;},
	canEnchant: function(mId,iId) { return iId === 4 },
	applies: function( other ) { return  other !== "respiration" },
	id: 6,
	color: "lime" },
{
	name: "aquaaffinity",
	weight: 2,
	minlevel: 1,
	maxlevel: 1,
	maxEnchant: function(){ return 41 },
	minEnchant: function(){  return 1},
	canEnchant: function(mId,iId) { return iId === 4; },
	applies: function( other ) { return other !== "aquaaffinity"  },
	id: 7,
	color: "teal" },
{
	name: "sharpness",
	weight: 10,
	minlevel: 1,
	maxlevel: 5,
	maxEnchant: function( i ){ return this.minEnchant(i) + 20;},
	minEnchant: function( i ){  return 1+(i-1)*16;},
	canEnchant: function(mId,iId) { return iId === 1 ; },
	applies: function( other ) { return !( other === "baneofarthropods" || other === "smite" || other === "sharpness" ) },
	id: 8,
	color: "orange" },
{
	name: "smite",
	weight: 5,
	minlevel: 1,
	maxlevel: 5,
	maxEnchant: function( i ){ return this.minEnchant(i) + 20;},
	minEnchant: function( i ){  return 5+(i-1)*8;},
	canEnchant: function(mId,iId) { return iId === 1; },
	applies: function( other ) { return !(other === "baneofarthropods" || other === "smite" || other === "sharpness") },
	id: 9,
	color: "sienna" },
{
	name: "baneofarthropods",
	weight: 5,
	minlevel: 1,
	maxlevel: 5,
	maxEnchant: function( i ){ return this.minEnchant(i) + 20;},
	minEnchant: function( i ){  return 5+(i-1)*8;},
	canEnchant: function(mId,iId) { return iId === 1; },
	applies: function( other ) { return !( other === "baneofarthropods" || other === "smite" || other === "sharpness" ) },
	id: 10,
	color: "olive" },
{
	name: "knockback",
	weight: 5,
	minlevel: 1,
	maxlevel: 2,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function( i ){  return 5+(i-1)*20;},
	canEnchant: function(mId,iId) { return iId === 1; },
	applies: function( other ) { return other !== "knockback" },
	id: 11,
	color: "lightblue" },
{
	name: "fireaspect",
	weight: 2,
	minlevel: 1,
	maxlevel: 2,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function( i ){  return 10+(i-1)*20;},
	canEnchant: function(mId,iId) { return iId === 1; },
	applies: function( other ) { return other !== "fireaspect" },
	id: 12,
	color: "salmon" },
{
	name: "looting",
	weight: 2,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function( i ){  return 20+(i-1)*12;},
	canEnchant: function(mId,iId) { return iId === 1; },
	applies: function( other ) { return other !== "looting" },
	id: 13,
	color: "navy" },
{
	name: "efficiency",
	weight: 10,
	minlevel: 1,
	maxlevel: 5,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function( i ){  return 1+(i-1)*15;},
	canEnchant: function(mId,iId) { return iId === 0 || iId === 2 || iId === 3; },
	applies: function( other ) { return !( other === "efficiency" ) },
	id: 14,
	color: "orchid" },
{
	name: "silktouch",
	weight: 1,
	minlevel: 1,
	maxlevel: 1,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function(){  return 25;},
	canEnchant: function(mId,iId) { return iId === 0 || iId === 2 || iId === 3; },
	applies: function( other ) { return !( other === "fortune" || other === "silktouch" ) },
	id: 15,
	color: "darkviolet" },
{
	name: "unbreaking",
	weight: 5,
	minlevel: 1,
	maxlevel: 3,
	maxEnchant: function( i ){ return this.minEnchant(i) + 50;},
	minEnchant: function( i ){  return 5+(i-1)*10;},
	canEnchant: function(mId,iId) { return iId === 0 || iId === 2 || iId === 3; },
	applies: function( other ) { return other !== "unbreaking" },
	id: 16,
	color: "turquoise"
}
];
